Para todas as questões, utilize os LEDs e/ou os botões da placa Launchpad do MSP430.

1.Escreva um código em C que pisca os LEDs ininterruptamente.
#include <msp430g2553.h>
#define LED1 BIT0
#define LED2 BIT6
void main(void){
 WDTCTL = WDTPW | WDTHOLD;
 P1OUT = 0;
 P1DIR = LED1 + LED2;
 for(;;)
 {
 P1OUT |= LED1 + LED2;
 P1OUT &= ~(LED1 + LED2);
 }
}
2.Escreva um código em C que pisca os LEDs ininterruptamente. No ciclo que pisca os LEDs, o tempo que os LEDs ficam ligados deve ser duas 
vezes maior do que o tempo que eles ficam desligados.
#include <msp430g2553.h>
#define LED1 BIT0
#define LED2 BIT6
void main(void){
 WDTCTL = WDTPW | WDTHOLD;
 P1OUT = 0;
 P1DIR = LED1 + LED2;
 for(;;)
 {
 P1OUT |= LED1 + LED2;
 P1OUT |= LED1 + LED2;
 P1OUT |= ~(LED1 + LED2);
 }
}
3.Escreva um código em C que acende os LEDs quando o botão é pressionado.
#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6
void main(void){
 WDTCTL = WDTPW | WDTHOLD;
 P1OUT = 0;
 P1DIR = LED1 + LED2;
 for(;;)
 {
 if(P1IN & BTN == 0)
 P1OUT |= LED1 + LED2;
 else
 P1OUT &= ~(LED1 + LED2);
 }
}

4.Escreva um código em C que pisca os LEDs ininterruptamente somente se o botão for pressionado.
#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6
void main(void){
 WDTCTL = WDTPW | WDTHOLD;
 P1OUT = 0;
 P1DIR = LED1 + LED2;
 for(;;)
 {
 if(P1IN & BTN == 0)]
 Loop:
 P1OUT |= LED1 + LED2;
 P1OUT &= ~(LED1 + LED2);
 jmp Loop
 }
}

5.Escreva um código em C que acende os LEDs quando o botão é pressionado. Deixe o MSP430 em modo de baixo consumo, e habilite a 
interrupção do botão.

#include <msp430g2553.h>
#define BTN BIT2
#define LED1 BIT0
#define LED2 BIT6
void main(void){
 WDTCTL = WDTPW | WDTHOLD;
 P1OUT = 0;
 P1DIR = LED1 + LED2;
 for(;;)
 {
 if(P1IN & BTN == 0)
 P1OUT |= LED1 + LED2;
 else
 P1OUT &= ~(LED1 + LED2);
 }
}
